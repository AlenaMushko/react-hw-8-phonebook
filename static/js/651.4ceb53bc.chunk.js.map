{"version":3,"file":"static/js/651.4ceb53bc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactEl/ContactEl.jsx","components/ContactList/ContactList.jsx","pages/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.phoneBook.contacts;\nexport const selectIsLoading = state => state.phoneBook.isLoading;\nexport const selectError = state => state.phoneBook.error;\nexport const selectFilter = state => state.phoneBook.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filterValue) =>\n    contacts.filter(contact => contact.name.toLowerCase().includes(filterValue))\n);\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormHelperText,\n  Button,\n  Container,\n  Box,\n  AbsoluteCenter,\n} from '@chakra-ui/react';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameId = nanoid();\n  const numberId = nanoid();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const isContactRecorded = contacts.find(contact => contact.name === name);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    isContactRecorded\n      ? alert(`${name} is alreadi in contacts`)\n      : dispatch(addContact({ id: nanoid(), name, number }));\n    toast.success('new contact added');\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Container maxW=\"2xl\" centerContent>\n      <FormControl\n        as=\"form\"\n        bg=\"#FAF5FF\"\n        border={30}\n        onSubmit={handleSubmit}\n        autoComplete=\"off\"\n      >\n        <Box display=\"flex\" gap={8}>\n          <FormLabel>\n            Name contact\n            <Input\n              id={nameId}\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              value={name}\n              onChange={handleChange}\n              boxShadow=\"xl\"\n              p=\"6\"\n              rounded=\"md\"\n            />\n            <FormHelperText fontSize={14} color=\"green.500\" mt={1}>\n              Name must be longer than 2 characters\n            </FormHelperText>\n          </FormLabel>\n\n          <FormLabel>\n            Phone number\n            <Input\n              id={numberId}\n              type=\"tel\"\n              name=\"number\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              value={number}\n              onChange={handleChange}\n              boxShadow=\"xl\"\n              p=\"6\"\n              rounded=\"md\"\n            />\n            <FormHelperText fontSize={14} color=\"green.500\" mt={1}>\n              Number must be only numbers\n            </FormHelperText>\n          </FormLabel>\n        </Box>\n        <Box position=\"relative\" h=\"100px\">\n          <AbsoluteCenter>\n            <Button\n              type=\"submit\"\n              w={300}\n              bg=\"green.300\"\n              _hover={{ bg: 'pink.300' }}\n              boxShadow=\"dark-lg\"\n              size=\"lg\"\n              rounded=\"md\"\n            >\n              Add contact\n            </Button>\n          </AbsoluteCenter>\n        </Box>\n      </FormControl>\n    </Container>\n  );\n};\n","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/contactsSlice';\nimport {\n  HStack,\n  Flex,\n  FormControl,\n  FormLabel,\n  Input,\n  Text,\n} from '@chakra-ui/react';\n\nexport const FilterContacts = () => {\n  const filterId = nanoid();\n  const dispatch = useDispatch();\n\n  const [FilterValue, setFilterValue] = useState('');\n  const changeFilter = e => {\n    setFilterValue(e.currentTarget.value);\n    dispatch(filterContacts(e.currentTarget.value.toLowerCase()));\n  };\n\n  return (\n    <Flex display=\"flex\" bg=\"pink.400\" p=\"4\" borderTopRadius={20}>\n      <Text fontSize=\"24px\" color=\"whitesmoke\">\n        Find contacts by name\n      </Text>\n      <HStack spacing=\"32px\">\n        <FormControl as=\"form\" ml={8}>\n          <FormLabel htmlFor={filterId}>\n            <Input\n              id={filterId}\n              type=\"text\"\n              name=\"filter\"\n              value={FilterValue}\n              onChange={changeFilter}\n              boxShadow=\"xl\"\n              p=\"6\"\n              w={250}\n              bg=\"whitesmoke\"\n            />\n          </FormLabel>\n        </FormControl>\n      </HStack>\n    </Flex>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button, Text, Icon, Flex, Spacer } from '@chakra-ui/react';\nimport { DeleteIcon } from '@chakra-ui/icons';\nimport { BsPhoneVibrate } from 'react-icons/bs';\nimport { CgSmileMouthOpen } from 'react-icons/cg';\n\nexport const ContactEl = ({ contact }) => {\n  const dispatch = useDispatch();\n  const { id, name, number } = contact;\n  return (\n    <Flex\n      display=\"flex\"\n      gap={8}\n      alignItems=\"center\"\n      p={4}\n      bg=\"green.400\"\n      color=\"whitesmoke\"\n      borderRadius={18}\n      boxShadow=\"xl\"\n      _hover={{ boxShadow: 'dark-lg' }}\n    >\n      <Text>\n        <Icon as={CgSmileMouthOpen} w={8} h={8} color=\"pink.500\" mr={3} />\n        {name}:\n      </Text>\n      <Text>\n        <Icon as={BsPhoneVibrate} w={8} h={8} color=\"pink.500\" mr={3} />\n        {number}\n      </Text>\n      <Spacer />\n      <Button\n        color=\"white\"\n        fontSize={18}\n        type=\"submit\"\n        bg=\"green.300\"\n        _hover={{ bg: 'pink.100', color: 'green.800' }}\n        boxShadow=\"dark-lg\"\n        rounded=\"md\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        <DeleteIcon color=\"green\" w={6} h={6} mr={3} />\n        Delete\n      </Button>\n    </Flex>\n  );\n};\n\nContactEl.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/selectors';\nimport { ContactEl } from 'components/ContactEl';\nimport { List, ListItem } from '@chakra-ui/react';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List p={4} borderBottomRadius={20} bg=\"green.100\">\n      {filteredContacts.map(contact => (\n        <ListItem key={contact.id} mt={4}>\n          <ContactEl contact={contact} />\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from 'components/ContactForm';\nimport { Discuss } from 'react-loader-spinner';\nimport { FilterContacts } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Center, Container } from '@chakra-ui/react';\n\nexport default function Tasks() {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container bg=\"#FAF5FF\">\n      <Center fontSize=\"32px\" as=\"i\" color=\"pink.600\" textAlign=\"center\">\n        Phonebook\n      </Center>\n      <ContactForm />\n      {isLoading && <Discuss />}\n      {error && (\n        <Center fontSize=\"16px\" color=\"tomato\" mt={12}>\n          Sorry, something went wrong. Try again\n        </Center>\n      )}\n      {contacts.length > 0 && (\n        <>\n          <Center fontSize=\"32px\" as=\"i\" color=\"pink.600\">\n            Contacts\n          </Center>\n          <FilterContacts />\n          <ContactList />\n        </>\n      )}\n    </Container>\n  );\n}\n"],"names":["selectContacts","state","phoneBook","contacts","selectIsLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","filter","filterValue","contact","name","toLowerCase","includes","ContactForm","useSelector","dispatch","useDispatch","useState","setName","number","setNumber","nameId","nanoid","numberId","handleChange","e","currentTarget","value","isContactRecorded","find","maxW","centerContent","as","bg","border","onSubmit","preventDefault","alert","addContact","id","toast","autoComplete","display","gap","I","type","pattern","title","required","onChange","boxShadow","p","rounded","fontSize","color","mt","position","h","w","_hover","size","FilterContacts","filterId","FilterValue","setFilterValue","borderTopRadius","spacing","ml","htmlFor","filterContacts","ContactEl","alignItems","borderRadius","CgSmileMouthOpen","mr","BsPhoneVibrate","onClick","deleteContact","ContactList","filteredContacts","borderBottomRadius","map","Tasks","useEffect","fetchContacts","textAlign","length"],"sourceRoot":""}